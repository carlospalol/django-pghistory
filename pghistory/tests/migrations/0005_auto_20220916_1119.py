# Generated by Django 3.2.15 on 2022-09-16 16:19
# flake8: noqa

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import pgtrigger.compiler
import pgtrigger.migrations

import pghistory.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tests", "0004_auto_20220913_2228"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomEvents",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                (
                    "pgh_table",
                    models.CharField(
                        help_text="The table under which the event is stored.", max_length=64
                    ),
                ),
                (
                    "pgh_data",
                    pghistory.models.PGHistoryJSONField(
                        help_text="The raw data of the event row."
                    ),
                ),
                (
                    "pgh_diff",
                    pghistory.models.PGHistoryJSONField(
                        help_text="The diff between the previous event and the current event."
                    ),
                ),
                (
                    "pgh_context_id",
                    models.UUIDField(help_text="The ID associated with the context.", null=True),
                ),
                (
                    "pgh_context",
                    models.JSONField(
                        help_text="The context associated with the event.",
                        null=True,
                        verbose_name="pghistory.Context",
                    ),
                ),
                (
                    "pgh_obj_table",
                    models.CharField(
                        help_text="The table under which the primary object is stored.",
                        max_length=64,
                    ),
                ),
                (
                    "pgh_obj_id",
                    models.TextField(help_text="The ID of the primary object.", null=True),
                ),
                ("url", models.TextField(null=True)),
            ],
            options={
                "managed": False,
            },
            managers=[
                ("no_objects", django.db.models.manager.Manager()),
            ],
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_no_id_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_no_id_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_update",
        ),
        migrations.AddField(
            model_name="denormcontext",
            name="fk_field",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="denormcontextevent",
            name="fk_field",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="denormcontexteventnoid",
            name="fk_field",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_no_id_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_denormcontexteventnoid" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, NOW(), \'snapshot_no_id\', NEW."id"); RETURN NULL;',
                    hash="43e6b33dddadd595d545bf50b36c9fe33245aba3",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_no_id_insert_f9f15",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_no_id_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."int_field" IS DISTINCT FROM NEW."int_field" OR OLD."fk_field_id" IS DISTINCT FROM NEW."fk_field_id")',
                    func='INSERT INTO "tests_denormcontexteventnoid" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, NOW(), \'snapshot_no_id\', NEW."id"); RETURN NULL;',
                    hash="6d8f964e191a79ea450d22ce462b1ba047534b37",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_no_id_update_3c605",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_denormcontextevent" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="2f030029a5e7d9f99a1f710fecda77c025c6959c",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_37e9f",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."int_field" IS DISTINCT FROM NEW."int_field" OR OLD."fk_field_id" IS DISTINCT FROM NEW."fk_field_id")',
                    func='INSERT INTO "tests_denormcontextevent" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="4e62205fe5d6da112eb13754f8443f8e3d8f7a45",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_ca16a",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
    ]
